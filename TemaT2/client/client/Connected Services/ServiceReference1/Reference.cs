//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace client.ServiceReference1 {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.WebServiceSoap")]
    public interface WebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string HelloWorld();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        System.Threading.Tasks.Task<string> HelloWorldAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/returnTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable returnTable(string tableName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/returnTable", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> returnTableAsync(string tableName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllTables", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetAllTables();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllTables", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetAllTablesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddItemToTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void AddItemToTable(string tableName, string name, decimal price, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddItemToTable", ReplyAction="*")]
        System.Threading.Tasks.Task AddItemToTableAsync(string tableName, string name, decimal price, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteItemFromTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DeleteItemFromTable(string selectedTableName, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteItemFromTable", ReplyAction="*")]
        System.Threading.Tasks.Task DeleteItemFromTableAsync(string selectedTableName, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateItemInTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateItemInTable(string selectedTableName, int id, string newName, decimal newPrice, System.DateTime newDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateItemInTable", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateItemInTableAsync(string selectedTableName, int id, string newName, decimal newPrice, System.DateTime newDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FilterItemsByPrice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable FilterItemsByPrice(string selectedTableName, decimal maxPrice, string sign);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FilterItemsByPrice", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> FilterItemsByPriceAsync(string selectedTableName, decimal maxPrice, string sign);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CalculateTotalPriceByDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        decimal CalculateTotalPriceByDate(string selectedTableName, string selectedDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CalculateTotalPriceByDate", ReplyAction="*")]
        System.Threading.Tasks.Task<decimal> CalculateTotalPriceByDateAsync(string selectedTableName, string selectedDate);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebServiceSoapChannel : client.ServiceReference1.WebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebServiceSoapClient : System.ServiceModel.ClientBase<client.ServiceReference1.WebServiceSoap>, client.ServiceReference1.WebServiceSoap {
        
        public WebServiceSoapClient() {
        }
        
        public WebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string HelloWorld() {
            return base.Channel.HelloWorld();
        }
        
        public System.Threading.Tasks.Task<string> HelloWorldAsync() {
            return base.Channel.HelloWorldAsync();
        }
        
        public System.Data.DataTable returnTable(string tableName) {
            return base.Channel.returnTable(tableName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> returnTableAsync(string tableName) {
            return base.Channel.returnTableAsync(tableName);
        }
        
        public string[] GetAllTables() {
            return base.Channel.GetAllTables();
        }
        
        public System.Threading.Tasks.Task<string[]> GetAllTablesAsync() {
            return base.Channel.GetAllTablesAsync();
        }
        
        public void AddItemToTable(string tableName, string name, decimal price, System.DateTime date) {
            base.Channel.AddItemToTable(tableName, name, price, date);
        }
        
        public System.Threading.Tasks.Task AddItemToTableAsync(string tableName, string name, decimal price, System.DateTime date) {
            return base.Channel.AddItemToTableAsync(tableName, name, price, date);
        }
        
        public void DeleteItemFromTable(string selectedTableName, int id) {
            base.Channel.DeleteItemFromTable(selectedTableName, id);
        }
        
        public System.Threading.Tasks.Task DeleteItemFromTableAsync(string selectedTableName, int id) {
            return base.Channel.DeleteItemFromTableAsync(selectedTableName, id);
        }
        
        public void UpdateItemInTable(string selectedTableName, int id, string newName, decimal newPrice, System.DateTime newDate) {
            base.Channel.UpdateItemInTable(selectedTableName, id, newName, newPrice, newDate);
        }
        
        public System.Threading.Tasks.Task UpdateItemInTableAsync(string selectedTableName, int id, string newName, decimal newPrice, System.DateTime newDate) {
            return base.Channel.UpdateItemInTableAsync(selectedTableName, id, newName, newPrice, newDate);
        }
        
        public System.Data.DataTable FilterItemsByPrice(string selectedTableName, decimal maxPrice, string sign) {
            return base.Channel.FilterItemsByPrice(selectedTableName, maxPrice, sign);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> FilterItemsByPriceAsync(string selectedTableName, decimal maxPrice, string sign) {
            return base.Channel.FilterItemsByPriceAsync(selectedTableName, maxPrice, sign);
        }
        
        public decimal CalculateTotalPriceByDate(string selectedTableName, string selectedDate) {
            return base.Channel.CalculateTotalPriceByDate(selectedTableName, selectedDate);
        }
        
        public System.Threading.Tasks.Task<decimal> CalculateTotalPriceByDateAsync(string selectedTableName, string selectedDate) {
            return base.Channel.CalculateTotalPriceByDateAsync(selectedTableName, selectedDate);
        }
    }
}
